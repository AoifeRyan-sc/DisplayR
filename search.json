[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 DisplayR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/powerpoint.html","id":"creating-volume-over-time-plots","dir":"Articles","previous_headings":"","what":"Creating Volume Over Time Plots","title":"Charts for PowerPoint","text":"Let’s get data. ’ll use disp_ms_vot function, creates line chart data frame. Type ?disp_ms_vot access documentation. function counts date variable us, buckets date variable day, week, month, quarter, year, accoding input time argument. can preview plot temporary PowerPoint printing setting preview = TRUE vot","code":"df <- DisplayR::disp_example vot_plot <- df %>%   disp_ms_vot(date = date, time = \"week\") vot_plot %>%   print(preview = TRUE)"},{"path":"/articles/powerpoint.html","id":"creating-grouped-volume-over-time-plots","dir":"Articles","previous_headings":"","what":"Creating Grouped Volume Over Time Plots","title":"Charts for PowerPoint","text":"Usually creating Volume Time charts want create chart shows volume multiple groups, example may want create sentiment time chart show positive, negative neutral, volume time topic topic modelling output. use disp_ms_vot_grouped grouped_vot Now line topic, charting weekly volume. However, colours default colours may want output PowerPoint.","code":"grouped_vot_plot <- df %>%   disp_ms_vot_grouped(date = date, group_var = topic, time = \"week\")   grouped_vot_plot %>%   print(preview = TRUE)"},{"path":"/articles/powerpoint.html","id":"restyling-the-plot---colours","dir":"Articles","previous_headings":"Creating Grouped Volume Over Time Plots","what":"Restyling The Plot - Colours","title":"Charts for PowerPoint","text":"pass custom colours need named list/vector colours. ’ll use Viridis palette demonstrative purposes: topic_viridis Now line colour viridis scale. used named vector/list different, custom palette - principle remains , take named list values colours feed chart_data_stroke function. can make sure values correct extracting data frame, topics topics <- sort(unique(df$topic))","code":"colours <- viridis::viridis_pal()(9) topics <- sort(unique(df$topic)) names(colours)  <- topics print(colours)  grouped_vot_plot <- grouped_vot_plot %>%   chart_data_stroke(values = colours) #use chart_data_stroke for line charts, chart_data_fill for bar charts.  grouped_vot_plot %>%   print(preview = TRUE)"},{"path":"/articles/powerpoint.html","id":"restyling-the-plot---titles","dir":"Articles","previous_headings":"Creating Grouped Volume Over Time Plots","what":"Restyling The Plot - Titles","title":"Charts for PowerPoint","text":"Another likely customisation ’ll want make programmatically add titles charts. can use mschart’s chart_labels function:","code":"grouped_vot_plot <- grouped_vot_plot %>%   chart_labels(title = \"Volume over time plot coloured in Viridis scale\", xlab = \"Date\", ylab = \"Weekly volume\")"},{"path":"/articles/powerpoint.html","id":"visualising-sentiment-distributions","dir":"Articles","previous_headings":"","what":"Visualising Sentiment Distributions","title":"Charts for PowerPoint","text":"often need visualise sentiment distributions - either entire datasets groups, groups within groups… Generally prefer stacked bar charts pie charts variants. human visual system better comparing lengths heights areas. ’re also neater, concise.","code":""},{"path":"/articles/powerpoint.html","id":"creating-stacked-sentiment-barcharts","dir":"Articles","previous_headings":"Visualising Sentiment Distributions","what":"Creating Stacked Sentiment Barcharts %","title":"Charts for PowerPoint","text":"create stacked sentiment barcharts can use disp_ms_sent_grouped function. function expects enter variable contains sentiment categories - remove NAs sentiment, make sentiment categories lower case. also need input topic variable, can decide whether output ‘percent’ ‘volume’ plot_type argument. Tip: Using ‘percent’ ensure stacked bar length, may misleading volume low.","code":"library(ggplot2) grouped_sent_chart <- df %>%    disp_ms_sent_grouped(sentiment, topic, plot_type = \"percent\") %>%   # chart_data_labels(show_val = TRUE)  %>%   chart_theme(     grid_major_line_x = fp_border(style = \"none\"),     grid_major_line_y = fp_border(style = \"none\"),     axis_ticks_y = fp_border(style = \"none\"))  grouped_sent_chart %>% print(preview = TRUE)"},{"path":"/articles/powerpoint.html","id":"restyling-the-plot---ordering-removing-grid-lines","dir":"Articles","previous_headings":"Visualising Sentiment Distributions > Creating Stacked Sentiment Barcharts %","what":"Restyling The Plot - Ordering + Removing Grid Lines","title":"Charts for PowerPoint","text":"ordering plot currently alphabetical, may best way - indeed often best way. reasonable ordering may overall volume. topic_n variable, can reorder topic topic_n, using mutate reorder: Notice removed many grid lines, included defualts within charting functions presently.","code":"grouped_sent_chart <- df %>%   mutate(topic = reorder(topic, topic_n)) %>%   disp_ms_sent_grouped(sentiment, topic, plot_type = \"percent\") %>%   # chart_data_labels(show_val = TRUE)  %>%   chart_theme(     grid_major_line_x = fp_border(style = \"none\"),     grid_major_line_y = fp_border(style = \"none\"),     axis_ticks_y = fp_border(style = \"none\")) grouped_sent_chart %>%   print(preview = TRUE)"},{"path":"/articles/powerpoint.html","id":"creating-stacked-sentiment-barcharts---volume","dir":"Articles","previous_headings":"Visualising Sentiment Distributions","what":"Creating Stacked Sentiment Barcharts - Volume","title":"Charts for PowerPoint","text":"Sometimes may need create raw volume rather proportion/%-based charts, can use plot_type = “volume” argument achieve .","code":"grouped_sent_chart <- df %>%   mutate(topic = reorder(topic, topic_n)) %>%   disp_ms_sent_grouped(sentiment, topic, plot_type = \"volume\")"},{"path":"/articles/powerpoint.html","id":"restyling-the-plot---removing-data-labels","dir":"Articles","previous_headings":"Visualising Sentiment Distributions > Creating Stacked Sentiment Barcharts - Volume","what":"Restyling The Plot - Removing Data Labels","title":"Charts for PowerPoint","text":"However, notie data labels now feasible - categories bars small fit labels. case can remove :","code":"grouped_sent_chart %>%   chart_data_labels(show_val = FALSE) %>%   print(preview = TRUE)"},{"path":"/articles/powerpoint.html","id":"exporting-to-powerpoint---existing-presentation","dir":"Articles","previous_headings":"","what":"Exporting to PowerPoint - Existing Presentation","title":"Charts for PowerPoint","text":"’ve made plots now need export efficiently PowerPoint, {officer} package shines. options exporting : Read current PowerPoint presentation insert chart new slide. Create new PowerPoint presentation, insert new slide, copy chart existing presentation. 1. nearly always preferable 2. plot cuts overall steps go R –> PowerPoint, dealing 10s, 100s plots, difference meaningful. However, need know path PowerPoint presentation, PowerPoint can non-trivial users familiar navigating file systems directories, especially working interactive/live document, meaning may need opt 2.","code":""},{"path":"/articles/powerpoint.html","id":"one-plot-at-a-time","dir":"Articles","previous_headings":"Exporting to PowerPoint - Existing Presentation","what":"One plot at a time","title":"Charts for PowerPoint","text":"First need initialise PowerPoint presentation. demo presentation stored specific file path, ’ll use one now. can store filepath variable re-use variable. Tip: Mac users, use Finder identify root presentation - right click PowerPoint’s tray icon -> options -> open Finder begin, pptx_summary function outputs: Tip: Reading PowerPoint presentation custom ‘Master Slides’ give slide templates work . utility function ships DisplayR disp_add_slide takes presentation chart main inputs, well layout type master. presentation available layouts : add slide ‘Two Content’ layout, can use disp_add_slide function. common layout wherein chart sits right copy left. print presentation presentation path save changes.","code":"presentation_path <- \"~/Documents/presentations/officer_demo.pptx\"  presentation <- read_pptx(presentation_path) pptx_summary(presentation) layout_summary(presentation) #> Warning in kable_styling(.): Please specify format in kable. kableExtra can #> customize either HTML or LaTeX outputs. See #> https://haozhu233.github.io/kableExtra/ for details. presentation <- disp_add_slide(presentation, grouped_sent_chart, layout = \"Two Content\")  print(presentation, target = presentation_path)"},{"path":"/articles/powerpoint.html","id":"multiple-plots","dir":"Articles","previous_headings":"Exporting to PowerPoint - Existing Presentation","what":"Multiple plots","title":"Charts for PowerPoint","text":"Let’s say list plots, ’ll go volume time now. generate list plots, one topic using following code: added additional logic add title plot can keep track inside PowerPoint. Now can go file’s destination open , see new slides. Warning: good understanding iteration using {purrr} package important veering away script.","code":"topic_names <- unique(sort(df$topic)) plot_list <- df %>%   group_split(topic) %>%   map(~ .x %>% disp_ms_vot(date = date, time = \"week\") %>%         chart_theme(legend_position = \"n\")) %>%   setNames(topic_names) %>% # set the name of the list just in case   map2(.x = ., .y = topic_names, ~ .x %>%          chart_labels(title = paste0(\"Volume over time - \", .y))) # add a title to each plot  presentation <- purrr::reduce(plot_list, disp_add_slide, layout = \"Two Content\", .init = presentation)  print(presentation, presentation_path)"},{"path":"/articles/powerpoint.html","id":"exporting-to-powerpoint---new-presentation","dir":"Articles","previous_headings":"","what":"Exporting to PowerPoint - New Presentation","title":"Charts for PowerPoint","text":"cases ’re working live presentations big presentations, may need render slides new presentation copy . data copy chart. , leave ‘path =’ argument blank read_pptx function can now open presentation copy charts across.","code":"presentation <- read_pptx()  grouped_sent_chart <- df %>%   mutate(topic = reorder(topic, topic_n)) %>%   disp_ms_sent_grouped(sentiment, topic, plot_type = \"percent\")   presentation <- disp_add_slide(presentation, grouped_sent_chart, layout = \"Two Content\")  print(presentation, target = \"~/Documents/tmp_ppt_pres.pptx\")"},{"path":"/articles/powerpoint.html","id":"creating-a-gradient-filled-volume-sentiment-chart","dir":"Articles","previous_headings":"Exporting to PowerPoint - New Presentation","what":"Creating a gradient-filled volume + sentiment chart","title":"Charts for PowerPoint","text":"Topic Volume Negative Neutral Positive Conversational AI 1,559 26.4 50.3 23.3 AI Ethics & Society 798 42.7 41.6 15.7 AI-Powered Creativity 637 33.0 45.8 21.2 Risks & Challenges 631 62.4 28.2 9.4 AI Search 380 32.4 47.9 19.7 Coding & Assistance 364 31.6 45.9 22.5 AI Performance 280 20.7 43.6 35.7 AI & Business 268 21.3 41.0 37.7 AI & Security 82 29.3 54.9 15.9 Total 4,999 - - - can preview look powerpoint : Topic Volume Negative Neutral Positive Conversational AI 1,559 26.4 50.3 23.3 AI Ethics & Society 798 42.7 41.6 15.7 AI-Powered Creativity 637 33.0 45.8 21.2 Risks & Challenges 631 62.4 28.2 9.4 AI Search 380 32.4 47.9 19.7 Coding & Assistance 364 31.6 45.9 22.5 AI Performance 280 20.7 43.6 35.7 AI & Business 268 21.3 41.0 37.7 AI & Security 82 29.3 54.9 15.9 Total 4,999 - - - can export similarly exported charts. Tip: PowerPoint can remove gradient fill total row Positive + Negative columns via ‘format shape’ ’s now, see {officer} {mschart} packages tips styling exporting plots.","code":"(my_ft <- df %>%   disp_flextable(topic, sentiment)) print(my_ft, preview = \"pptx\")"},{"path":"/articles/tables.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Creating Beautiful Tables","text":"Tables essential often -appreciated method visualising data. Many data visualisation professionals eschew usage considered visually engaging. However, often ideal tool job. Many us well ask ‘need charts table?’ consider using table : need display precise values need display multiple raw volumes percentages place want users compare individual elements data multiple dimensions plotting becomes convoluted ’re slide-limited e.g. need provide executive summary complex data Apart using tables display communicate findings, ’s important aware tables can aid hypothesis generation, showing dig next data mining process.","code":""},{"path":"/articles/tables.html","id":"tabular-data","dir":"Articles","previous_headings":"","what":"Tabular Data","title":"Creating Beautiful Tables","text":"’ll use example data frame ships {DisplayR} {tidyverse} create summary tables, ’ll use {gt} {DisplayR} functions create aesthetically-pleasing tables. Let’s say need visualise volume - raw numbers %, well sentiment counts categorical variable - case ’ll use topic. can create summary table like : use various means visualise table, let’s try data table, fairly common. ’ll style bootstrap allow filtering top table. Whilst functional, table lacking visual appeal; ’s better used exploring data internally communicating findings including deck. Despite making clear topic highest volume, require considerable mental work figure topic highest proportion positive negative sentiment. ’re also lacking vital elements titles, subtitles, captions; well additional flourishes icons can bring table life. Let’s see visualise output gt.","code":"df <- DisplayR::disp_example ( summary_table <- df %>%   filter(!is.na(sentiment)) %>%   count(topic, sentiment, name = \"sent_n\") %>%   add_count(topic, wt = sent_n, name = \"volume\") %>%   pivot_wider(names_from = sentiment, values_from = sent_n) %>%   mutate(percent = round(volume / sum(volume) * 100, 2), .after = volume) %>%   arrange(desc(volume)) ) #> # A tibble: 9 × 6 #>   topic                 volume percent negative neutral positive #>   <chr>                  <int>   <dbl>    <int>   <int>    <int> #> 1 Conversational AI       1559   31.2       412     784      363 #> 2 AI Ethics & Society      798   16.0       341     332      125 #> 3 AI-Powered Creativity    637   12.7       210     292      135 #> 4 Risks & Challenges       631   12.6       394     178       59 #> 5 AI Search                380    7.6       123     182       75 #> 6 Coding & Assistance      364    7.28      115     167       82 #> 7 AI Performance           280    5.6        58     122      100 #> 8 AI & Business            268    5.36       57     110      101 #> 9 AI & Security             82    1.64       24      45       13 DT::datatable(summary_table, style = \"bootstrap\", filter = \"top\")"},{"path":"/articles/tables.html","id":"gt","dir":"Articles","previous_headings":"Tabular Data","what":"GT","title":"Creating Beautiful Tables","text":"table preferable multiple reason: gradient fill positive & negative columns make comparison easy. Volume x Time charts nice addition, allow us compare trends multiple topics glance, whilst also keeping volume + sentiment information eye movement away. overall styling just pleasant Data Table. *note, Sentiment x Time chart hidden view, ’re still experimenting charts work/ don’t work default outputs. One drawbacks gt easily output PowerPoint, step forward flextable","code":"library(gt) (my_gt <- df %>%   disp_gt(date_var = date,                             group_var = topic,                              sentiment_var = sentiment,                             sentiment_max_colours =                                list(\"negative\" = \"#D83B01\",                                    \"neutral\" = \"#FFB900\",                                    \"positive\" = \"#107C10\"),                             time_unit = \"day\",                             table_title = \"Topic Modelling Summary Table\", source_note = \"Data Source: xxx\" ) %>%   gt::cols_hide('Sentiment x Time') ) #> Warning: Removed 1 rows containing missing values (`position_stack()`). #> Warning: Removed 1 row containing missing values (`geom_line()`)."},{"path":"/articles/tables.html","id":"flextable-exporting-to-powerpoint","dir":"Articles","previous_headings":"Tabular Data","what":"Flextable & Exporting to PowerPoint","title":"Creating Beautiful Tables","text":"function include Volume x Time chart, get nice gradient fill Positive + Negative columns can export PowerPoint. Topic Volume Negative Neutral Positive Conversational AI 1,559 26.4 50.3 23.3 AI Ethics & Society 798 42.7 41.6 15.7 AI-Powered Creativity 637 33.0 45.8 21.2 Risks & Challenges 631 62.4 28.2 9.4 AI Search 380 32.4 47.9 19.7 Coding & Assistance 364 31.6 45.9 22.5 AI Performance 280 20.7 43.6 35.7 AI & Business 268 21.3 41.0 37.7 AI & Security 82 29.3 54.9 15.9 Total 4,999 - - - can preview look powerpoint : Topic Volume Negative Neutral Positive Conversational AI 1,559 26.4 50.3 23.3 AI Ethics & Society 798 42.7 41.6 15.7 AI-Powered Creativity 637 33.0 45.8 21.2 Risks & Challenges 631 62.4 28.2 9.4 AI Search 380 32.4 47.9 19.7 Coding & Assistance 364 31.6 45.9 22.5 AI Performance 280 20.7 43.6 35.7 AI & Business 268 21.3 41.0 37.7 AI & Security 82 29.3 54.9 15.9 Total 4,999 - - -","code":"(my_ft <- df %>%   disp_flextable(topic, sentiment)) print(my_ft, preview = \"pptx\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jack Penzer. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Penzer J (2023). DisplayR: Functions visualising data. R package version 0.0.0.9000, https://jpcompartir.github.io/DisplayR/.","code":"@Manual{,   title = {DisplayR: Functions for visualising data},   author = {Jack Penzer},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://jpcompartir.github.io/DisplayR/}, }"},{"path":"/index.html","id":"displayr","dir":"","previous_headings":"","what":"Functions for visualising data","title":"Functions for visualising data","text":"DisplayR Capture Intelligence’s comprehensive package data visualization, offering wide array functions tailored meet various data visualization needs. versatile package aims improve data presentation communication providing visually engaging informative graphics. package caters diverse set visualization requirements, including static interactive data visualization, tables, seamless PowerPoint integration R. DisplayR streamlines process creating customizing charts plots, enabling users efficiently produce visuals effectively convey insights patterns hidden within data.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functions for visualising data","text":"can install development version DisplayR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"jpcompartir/DisplayR\")"},{"path":"/reference/disp_add_slide.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a new slide to a PowerPoint presentation and insert a chart — disp_add_slide","title":"Add a new slide to a PowerPoint presentation and insert a chart — disp_add_slide","text":"function creates new slide specified layout inserts specified chart PowerPoint presentation using officer package.","code":""},{"path":"/reference/disp_add_slide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a new slide to a PowerPoint presentation and insert a chart — disp_add_slide","text":"","code":"disp_add_slide(   presentation,   chart,   layout = \"Title and Content\",   master = \"Office Theme\" )"},{"path":"/reference/disp_add_slide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a new slide to a PowerPoint presentation and insert a chart — disp_add_slide","text":"presentation officer::pptx object representing PowerPoint presentation. chart mschart::ms_chart object representing chart inserted. layout character string specifying slide layout used (default: \"Title Content\"). master character string specifying master slide used (default: \"Office Theme\").","code":""},{"path":"/reference/disp_add_slide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a new slide to a PowerPoint presentation and insert a chart — disp_add_slide","text":"modified officer::pptx object new slide chart added.","code":""},{"path":"/reference/disp_example.html","id":null,"dir":"Reference","previous_headings":"","what":"DisplayR example — disp_example","title":"DisplayR example — disp_example","text":"Data frame useful variables demonstration purposes/","code":""},{"path":"/reference/disp_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DisplayR example — disp_example","text":"","code":"disp_example"},{"path":"/reference/disp_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DisplayR example — disp_example","text":"data frame 5,000 observations 15 variables. document document id date placeholder text_copy placeholder text placeholder topic placeholder permalink placeholder cluster placeholder sentiment placeholder V1 placeholder V2 placeholder new_clusters placeholder universal_message_id placeholder fifty_clusters placeholder topic_n placeholder sender_screen_name placeholder","code":""},{"path":"/reference/disp_flextable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a flextable for volume + sentiment with a graident fill. — disp_flextable","title":"Create a flextable for volume + sentiment with a graident fill. — disp_flextable","text":"function takes data frame, grouping variable, sentiment variable create summary table display flextable. table contains count percentage positive, negative, neutral sentiments per group. positive negative columns filled gradient color.","code":""},{"path":"/reference/disp_flextable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a flextable for volume + sentiment with a graident fill. — disp_flextable","text":"","code":"disp_flextable(   data,   group_var,   sentiment_var,   positive_colour = \"#107C10\",   negative_colour = \"#D83B01\" )"},{"path":"/reference/disp_flextable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a flextable for volume + sentiment with a graident fill. — disp_flextable","text":"data data frame containing group variable sentiment variable. group_var name column data frame used grouping. sentiment_var name column data frame containing sentiment values. positive_colour (Optional) color positive gradient. Default \"#107C10\". negative_colour (Optional) color negative gradient. Default \"#D83B01\".","code":""},{"path":"/reference/disp_flextable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a flextable for volume + sentiment with a graident fill. — disp_flextable","text":"flextable object displaying summary table gradient coloring positive negative sentiments.","code":""},{"path":"/reference/disp_flextable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a flextable for volume + sentiment with a graident fill. — disp_flextable","text":"output function can exported directly PowerPoint. unique values within sentiment variable c(\"positive\", \"negative\", \"neutral\"), function try remove NAs, lower case sentiment variable, values 'pos', 'neg', 'neu', need replace vlaues function expects.","code":""},{"path":"/reference/disp_gt.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a gt_summary table fit for use in client briefs — disp_gt","title":"Create a gt_summary table fit for use in client briefs — disp_gt","text":"Function calls various helper functions, @seealso make_gt_summary_table. function prepares summary given dataset grouped variable interest summarised based sentiment time categories. summary presented 'gt' table format. Additional summary columns may created user-specified icons. table may customised specified title source note.","code":""},{"path":"/reference/disp_gt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a gt_summary table fit for use in client briefs — disp_gt","text":"","code":"disp_gt(   data,   sentiment_var,   group_var,   date_var,   time_unit = c(\"month\", \"day\", \"week\", \"year\", \"quarter\"),   sentiment_max_colours = list(negative = \"#C00000\", positive = \"#107C10\"),   icons = NULL,   table_title = \"Test\",   source_note = \"source_note =\" )"},{"path":"/reference/disp_gt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a gt_summary table fit for use in client briefs — disp_gt","text":"data data frame. sentiment_var variable data frame representing sentiment. group_var variable data frame used grouping. date_var variable data frame representing date. time_unit Time unit grouping. Default choices \"month\", \"day\", \"week\", \"year\", \"quarter\". Default \"month\". sentiment_max_colours List colours positive negative sentiments. icons Optional vector icons added summary table. table_title Title table. Default \"Test\". source_note Note added bottom table indicating source.","code":""},{"path":"/reference/disp_gt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a gt_summary table fit for use in client briefs — disp_gt","text":"gt object representing summary table.","code":""},{"path":"/reference/disp_gt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a gt_summary table fit for use in client briefs — disp_gt","text":"","code":"if (FALSE) { disp_gt_summary(my_data, \"sentiment\", \"group\", \"date\", \"month\",                 list(\"negative\" = \"#C00000\",\"positive\" = \"#107C10\"),                 NULL, \"My Summary\", \"source_note\") }"},{"path":"/reference/disp_gt_sent_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Display Sentiment Over Time — disp_gt_sent_time","title":"Display Sentiment Over Time — disp_gt_sent_time","text":"function generates chart showing sentiment distribution time based data frame, styled gt.","code":""},{"path":"/reference/disp_gt_sent_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display Sentiment Over Time — disp_gt_sent_time","text":"","code":"disp_gt_sent_time(   df,   sentiment_var = sentiment,   date_var = date,   chart_type = c(\"lines\", \"bars\"),   time_unit = c(\"week\", \"day\", \"month\", \"quarter\", \"year\"),   date_breaks = \"4 months\",   date_labels = \"%b\" )"},{"path":"/reference/disp_gt_sent_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display Sentiment Over Time — disp_gt_sent_time","text":"df input data frame. sentiment_var name variable data frame containing sentiment values. date_var name variable data frame containing dates. chart_type type chart plotted. Default \"lines\". time_unit time unit group data . Default \"week\". date_breaks breaks used x-axis date scale. Default \"4 months\". date_labels format labels x-axis date scale. Default \"%b\".","code":""},{"path":"/reference/disp_gt_sent_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display Sentiment Over Time — disp_gt_sent_time","text":"ggplot object representing plotted chart.","code":""},{"path":"/reference/disp_gt_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"quickly add re-usable theme elements for gt plot funcs — disp_gt_theme","title":"quickly add re-usable theme elements for gt plot funcs — disp_gt_theme","text":"quickly add re-usable theme elements gt plot funcs","code":""},{"path":"/reference/disp_gt_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"quickly add re-usable theme elements for gt plot funcs — disp_gt_theme","text":"","code":"disp_gt_theme()"},{"path":"/reference/disp_gt_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"quickly add re-usable theme elements for gt plot funcs — disp_gt_theme","text":"list ggplot boiler plate theme options","code":""},{"path":"/reference/disp_gt_vot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create volume over time charts for use in gt tables — disp_gt_vot","title":"Create volume over time charts for use in gt tables — disp_gt_vot","text":"plot function output appears cells gt table. custom styling applied remove much detail, output ","code":""},{"path":"/reference/disp_gt_vot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create volume over time charts for use in gt tables — disp_gt_vot","text":"","code":"disp_gt_vot(   df,   date_var,   time_unit = c(\"week\", \"day\", \"month\", \"quarter\", \"year\"),   bar_colour = \"#628EFD\",   date_breaks = \"4 months\",   date_labels = \"%b\" )"},{"path":"/reference/disp_gt_vot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create volume over time charts for use in gt tables — disp_gt_vot","text":"df input data frame. date_var name variable data frame containing dates. time_unit time unit group data . Default \"week\". bar_colour color bars plot. Default \"#628EFD\". date_breaks breaks used x-axis date scale. Default \"4 months\". date_labels format labels x-axis date scale. Default \"%b\".","code":""},{"path":"/reference/disp_gt_vot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create volume over time charts for use in gt tables — disp_gt_vot","text":"ggplot object representing bar plot.","code":""},{"path":"/reference/disp_ms_sent_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a Stacked Bar Chart of Sentiment Grouped by a Variable — disp_ms_sent_grouped","title":"Display a Stacked Bar Chart of Sentiment Grouped by a Variable — disp_ms_sent_grouped","text":"function takes data frame, sentiment variable, group variable, creates stacked bar chart representing distribution sentiment. within group, bars displayed horizontally percentage sentiment shown.","code":""},{"path":"/reference/disp_ms_sent_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a Stacked Bar Chart of Sentiment Grouped by a Variable — disp_ms_sent_grouped","text":"","code":"disp_ms_sent_grouped(   data,   sentiment_var,   group_var,   plot_type = c(\"percent\", \"volume\") )"},{"path":"/reference/disp_ms_sent_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a Stacked Bar Chart of Sentiment Grouped by a Variable — disp_ms_sent_grouped","text":"data data frame containing sentiment group variables. sentiment_var name sentiment variable data frame (string unquoted symbol). group_var name group variable data frame (string unquoted symbol). plot_type raw volumes percentages plotted.","code":""},{"path":"/reference/disp_ms_sent_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display a Stacked Bar Chart of Sentiment Grouped by a Variable — disp_ms_sent_grouped","text":"mschart::ms_barchart object representing stacked bar chart.","code":""},{"path":"/reference/disp_ms_vot.html","id":null,"dir":"Reference","previous_headings":"","what":"Display Time Series Chart of Data Volume — disp_ms_vot","title":"Display Time Series Chart of Data Volume — disp_ms_vot","text":"function generates time series chart data volume specified time period. chart created using mschart package based provided data, date column, time period, date format. data unsummarised, counting hood, .e. data long form date column already counted.","code":""},{"path":"/reference/disp_ms_vot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display Time Series Chart of Data Volume — disp_ms_vot","text":"","code":"disp_ms_vot(   data,   date,   time = c(\"week\", \"day\", \"month\", \"quarter\", \"year\"),   date_format = \"d/m/yy\" )"},{"path":"/reference/disp_ms_vot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display Time Series Chart of Data Volume — disp_ms_vot","text":"data data frame containing data plotted. date name date column data frame. time character vector specifying time unit used aggregation (default \"week\"). Supported values \"day\", \"week\", \"month\", \"quarter\", \"year\". date_format character string specifying format displaying dates x-axis (default \"d/m/yy\").","code":""},{"path":"/reference/disp_ms_vot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display Time Series Chart of Data Volume — disp_ms_vot","text":"mschart object representing time series chart data volume specified time period.","code":""},{"path":"/reference/disp_ms_vot_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Display Time Series Chart of Grouped Data Volume — disp_ms_vot_grouped","title":"Display Time Series Chart of Grouped Data Volume — disp_ms_vot_grouped","text":"function generates time series chart grouped data volume specified time period. chart created using mschart package based provided data, date column, time period, date format. data unsummarised, counting hood, .e. data long form date group column already counted.","code":""},{"path":"/reference/disp_ms_vot_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display Time Series Chart of Grouped Data Volume — disp_ms_vot_grouped","text":"","code":"disp_ms_vot_grouped(   data,   date,   group_var,   time = c(\"week\", \"day\", \"month\", \"quarter\", \"year\"),   date_format = \"yyyy/dd/mm\" )"},{"path":"/reference/disp_ms_vot_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display Time Series Chart of Grouped Data Volume — disp_ms_vot_grouped","text":"data data frame containing data plotted. date name date column data frame. group_var name variable wish group , e.g. sentiment topic. time character vector specifying time unit used aggregation (default \"week\"). Supported values \"day\", \"week\", \"month\", \"quarter\", \"year\". date_format character string specifying format displaying dates x-axis (default \"d/m/yy\").","code":""},{"path":"/reference/disp_ms_vot_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display Time Series Chart of Grouped Data Volume — disp_ms_vot_grouped","text":"mschart object representing time series chart data volume specified time period.","code":""},{"path":"/reference/make_gt_summary_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Summary Table for gt Summary Process — make_gt_summary_table","title":"Create a Summary Table for gt Summary Process — make_gt_summary_table","text":"function creates summary table one step gt summary process. table summarizes data based group variable sentiment variable.","code":""},{"path":"/reference/make_gt_summary_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Summary Table for gt Summary Process — make_gt_summary_table","text":"","code":"make_gt_summary_table(data, group_var, sentiment_var)"},{"path":"/reference/make_gt_summary_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Summary Table for gt Summary Process — make_gt_summary_table","text":"data input data frame. group_var name variable used grouping data. sentiment_var name variable representing sentiment values.","code":""},{"path":"/reference/make_gt_summary_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Summary Table for gt Summary Process — make_gt_summary_table","text":"data frame containing summary table.","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""}]
